class BoothVideosController < ApplicationController
 before_filter :find_booth_details
  
def show
    render :layout => '/layouts/sponsored_group_manage_sub_menu'
end

def create
    @group.booth_video=BoothVideo.new(params[:booth_video])
    if @group.booth_video.save
        flash[:success]="New Booth Video Link created!"
    else
        flash[:error]="New Booth Video Link failed!"
    end
    redirect_to :action => :show
end

def update
    @booth_video=@group.booth_video
    @booth_video.update_attributes!(params[:booth_video])
    @booth_video.group_id=@group.id
    redirect_to :action => :show
end

def destroy
    @group.booth_video.destroy
end

def find_booth_details
    @group = Group.find(params[:group_id])
    @group_links = @group.group_links.all
     max_id = Group.count_by_sql("select min(profile_id) from (select profile_id from group_memberships where group_id = #{@group.id} order by profile_id desc limit 200) as x")
    @booth_members = @group.members.all(:conditions => "profiles.id >= #{rand(max_id)+1}", :limit => 20).to_a.sort! { |a,b| rand(3)-1 }
    @group_blog_tags=TagCloud.tagcloudize(@group.blog.booth_tags.map{|x|x.name + " "})
    if @group_blog_tags.count > 0
      @group_blog_tags.sort!{|a,b|a[:count]<=>b[:count]}
      @minTagOccurs=@group_blog_tags.first[:count]
      @maxTagOccurs=@group_blog_tags.last[:count]
    end
  end
  
end
